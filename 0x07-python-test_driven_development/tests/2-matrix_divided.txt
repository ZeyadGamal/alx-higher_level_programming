>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

>>> matrix = [[3, 6, 9], [12, 15, 18]]
>>> print(matrix_divided(matrix, 3))
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

>>> matrix = [[1, 2.4, 3], [4.1, 5, 6.8]]
>>> matrix_divided(matrix, 11)
[[0.09, 0.22, 0.27], [0.37, 0.45, 0.62]]
>>> matrix
[[1, 2.4, 3], [4.1, 5, 6.8]]

>>> matrix_divided(None, 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [1, 2, 3]], None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided("Not a matrix!", 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([1, 2, 3], [4, 5, 6, 7]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3], "Hey"], 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[3, 6, 9], [12, 15, 18], -3]
[[-1, -2, -3], [-4, -5, -6]]
